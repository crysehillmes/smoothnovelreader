apply plugin: 'com.android.application'
apply plugin: 'crashlytics'
apply plugin: 'retrolambda'


android {
    compileSdkVersion 22
    buildToolsVersion '22'

    productFlavors {  }

    defaultConfig {
        minSdkVersion appMinSdkVersion
        targetSdkVersion appTargetSdkVersion
        applicationId 'org.cryse.novelreader'
        versionCode appVersionCode
        versionName appVersionName
    }

    compileOptions {
        encoding 'UTF-8'
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        debug {}
        release {}
    }

    buildTypes {
        debug {
            debuggable true
            shrinkResources true
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/MANIFEST.MF'
    }
}

dependencies {
    // Modules
    compile project(':main_module')
    compile project(':novel_sources:baidu_novel_source')
    compile project(':thirdparty_libs:bottomsheet_library')

    // Android Support Libraries
    compile 'com.android.support:support-v13:22.0.0'
    compile "com.android.support:appcompat-v7:22.0.0"
    compile 'com.android.support:support-annotations:22.0.0'
    compile 'com.android.support:cardview-v7:22.0.0'
    compile 'com.android.support:recyclerview-v7:22.0.0'

    // ReactiveX
    compile 'io.reactivex:rxandroid:0.22.0'
    compile 'io.reactivex:rxjava-async-util:0.21.0'

    // REST Client
    // compile 'com.squareup.retrofit:retrofit:1.7.0'

    compile 'com.umeng.analytics:analytics:5.4.2'

    // Dependency Injection
    compile 'com.squareup.dagger:dagger:1.2.2'
    provided 'com.squareup.dagger:dagger-compiler:1.2.2'
    compile 'com.jakewharton:butterknife:5.1.2'

    // Utils
    compile 'com.jakewharton.timber:timber:2.4.1'
    compile 'com.squareup.picasso:picasso:2.3.4'
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.4'
    compile ('com.crashlytics.android:crashlytics:1.+') {
        exclude group: 'com.squareup.okhttp', module: 'okhttp'
        exclude group: 'com.squareup.okhttp', module: 'okhttp-urlconnection'
    }

    retrolambdaConfig 'net.orfjackal.retrolambda:retrolambda:1.7.0'

    // UI elements
    compile 'com.nispok:snackbar:2.3.0'
    compile ('com.navercorp.pulltorefresh:library:3.2.3@aar') {
        exclude module: 'support-v4'
    }
    compile ('com.navercorp.pulltorefresh:extra-viewpager:3.2.3@aar') {
        exclude module: 'support-v4'
    }
    compile 'com.quentindommerc.superlistview:library:1.5.2'
    compile 'com.github.castorflex.smoothprogressbar:library:1.0.0'
    compile 'com.github.castorflex.smoothprogressbar:library-circular:1.0.1'
    compile 'com.afollestad:material-dialogs:0.6.2.1'
    compile 'com.jpardogo.materialtabstrip:library:1.0.6'
    compile 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.0'

    // Local libs
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

retrolambda {
    jdk System.getenv('JAVA8_HOME')
    oldJdk System.getenv('JAVA7_HOME')
    javaVersion JavaVersion.VERSION_1_7
    jvmArgs '-noverify'
}

def Properties props = new Properties()
def propFile = new File('app/signing.properties')
if (propFile.canRead()){
    props.load(new FileInputStream(propFile))

    if (props!=null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.debug.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.debug.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.debug.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.debug.keyPassword = props['KEY_PASSWORD']
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.debug.signingConfig = null
        android.buildTypes.release.signingConfig = null
    }
}else {
    println 'signing.properties not found'
    android.buildTypes.debug.signingConfig = null
    android.buildTypes.release.signingConfig = null
}