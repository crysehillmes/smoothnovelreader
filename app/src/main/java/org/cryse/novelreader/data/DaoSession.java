package org.cryse.novelreader.data;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import org.cryse.novelreader.model.NovelChapterModel;
import org.cryse.novelreader.model.NovelModel;
import org.cryse.novelreader.model.NovelBookMarkModel;
import org.cryse.novelreader.model.NovelChapterContentModel;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig novelChapterModelDaoConfig;
    private final DaoConfig novelModelDaoConfig;
    private final DaoConfig novelBookMarkModelDaoConfig;
    private final DaoConfig novelChapterContentModelDaoConfig;

    private final NovelChapterModelDao novelChapterModelDao;
    private final NovelModelDao novelModelDao;
    private final NovelBookMarkModelDao novelBookMarkModelDao;
    private final NovelChapterContentModelDao novelChapterContentModelDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        novelChapterModelDaoConfig = daoConfigMap.get(NovelChapterModelDao.class).clone();
        novelChapterModelDaoConfig.initIdentityScope(type);

        novelModelDaoConfig = daoConfigMap.get(NovelModelDao.class).clone();
        novelModelDaoConfig.initIdentityScope(type);

        novelBookMarkModelDaoConfig = daoConfigMap.get(NovelBookMarkModelDao.class).clone();
        novelBookMarkModelDaoConfig.initIdentityScope(type);

        novelChapterContentModelDaoConfig = daoConfigMap.get(NovelChapterContentModelDao.class).clone();
        novelChapterContentModelDaoConfig.initIdentityScope(type);

        novelChapterModelDao = new NovelChapterModelDao(novelChapterModelDaoConfig, this);
        novelModelDao = new NovelModelDao(novelModelDaoConfig, this);
        novelBookMarkModelDao = new NovelBookMarkModelDao(novelBookMarkModelDaoConfig, this);
        novelChapterContentModelDao = new NovelChapterContentModelDao(novelChapterContentModelDaoConfig, this);

        registerDao(NovelChapterModel.class, novelChapterModelDao);
        registerDao(NovelModel.class, novelModelDao);
        registerDao(NovelBookMarkModel.class, novelBookMarkModelDao);
        registerDao(NovelChapterContentModel.class, novelChapterContentModelDao);
    }
    
    public void clear() {
        novelChapterModelDaoConfig.getIdentityScope().clear();
        novelModelDaoConfig.getIdentityScope().clear();
        novelBookMarkModelDaoConfig.getIdentityScope().clear();
        novelChapterContentModelDaoConfig.getIdentityScope().clear();
    }

    public NovelChapterModelDao getNovelChapterModelDao() {
        return novelChapterModelDao;
    }

    public NovelModelDao getNovelModelDao() {
        return novelModelDao;
    }

    public NovelBookMarkModelDao getNovelBookMarkModelDao() {
        return novelBookMarkModelDao;
    }

    public NovelChapterContentModelDao getNovelChapterContentModelDao() {
        return novelChapterContentModelDao;
    }

}
